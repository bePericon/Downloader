<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAHsJAAB9CQAJewoADXsKAAp9CgAJfQ0AEXsMABZ9DQAZfxIANXsNADV8EQB9bhUAZHgSAGt4
        EQCKcxkAjHYYALZ2GQC+cy0Asnw5AL58OQDEbCMAwW4mAMp5JQDDcyoAyXMsANJxJwDVcCcA03QrAM94
        MgDUeTMA5HUqAOp3KwDxdi0A83gtAP9+NQDLfUAAAIIMAA+CEgAVgBYAHIoaACCLHgA2gxsAHockACWI
        JQArjScAJ4kqADOEIAA3jC8ALYwyAD2NMQANoiYAAaYsAAWlLwAMpioADKYsAAyoKwAJqi0AALEsAAeu
        MAAJrjEAFaU2AAC8OQAAvz0AB7w+AAm6OgAJuz0AQYQgAEKQPQBlkD0AAL5BAAW+QAAksUUAPb1jAEue
        SwBXpFcAQL5kAGOjYABgqWAAbbBtAHm2eQAAwEIAB8FDAADBRQAAw0gAAMVJAAfFSAAAyE0ABchNAAnI
        SwADylAAA8xQAAfMUgALylMAEctRABTOWQAazl0AJs9lACLQYgAr0GMAKdFmACzSaQAy02wAO9NtADvU
        cgA/2HcASsFrAFLCcQBaw3cAQdV1AE3SdQBO1HkAStl8AGDFewD/hTwAqphEAKqcSgCnoE4AqqBNAKih
        VgCqsX4Aw4FCAMuCRgDKi0cA0YVLAMiLUQDYjFQA0Y9YAM+YUADLn1UA3pJeAOmGRQDih08A/4hCAP6O
        TADvlEoA8ZJNAP+QTADikFsA4ZFeAOSSXwDxl1IA/ZNVAPCZVQD/mFQA/5paAM6kXQDak2EA2ZZoAOKV
        ZADlmGYA6JhmAOOZaQD/nGMA+J9nAOCdcQDHoGYAyKxkANqvbADfonUA9KNtAP+gaADsp3cA8aN3APuk
        cwDzpnoA9Kl9AP6reQD/tXcA/rl8AHe2gQBT24QAXN2LAGjIgQBj1IYAYN6MAGnfkwBi4pAAaeCTAG7l
        mQBz45oAeuahAHzopADiqYMA5KuDAOqqgwD0rIMA/6yAAOGxjgD+vYMA+LqMAOO1kgDuvpMA9raWAPG6
        kQD/vJUA/7yYAITIjwCczqQAld+lALPRsQCA6qcAg+qpAIvqqwCN7bEA/8GFAP/EiwD/yY0A/8KRAP/L
        kgD2w5wA/s6fAP/SnADrwKUA78erAPbHogD7y6MA9sKoAP7LqwD/1aMA/9GsAP/ZqwD7zbMA/8+4APvV
        swD/27QA9NO7APzUvAD+3LsAs+vGAP/cwwD+3ckA3OzeAP7jwwD+5M0A/+nOAP3j0wD+6tQA/+bZAP7r
        2wD/8N4A3+3hAOHu4QD/7eEA6PvvAP/y4wD/8+oA//jtAOz88gDy9/EA/vbxAPT59QD/+fMA8//4AP7+
        /QD///8AAAAAAAAAAAAAAAAAAABOAQFOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwEzMwFLAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFABNkJBNgFKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4ATdSUUZA
        OAJFAAAAAAAAAAAAAAAAAAAAAAAAAAC3EwQ0VlRTUVFAOQIMegAAAAAAAAAAAAAAAAAAAAC8hHsHNFlX
        VVVUU1FHOQIPG3kAAAAAAAAAAAAAAAAAlIqACDVeW1dXV1VVVFNHOwIQHxYAAAAAAAAAAAAAAJOagQM9
        Y2JgXVpXV1dVVFNHPAIOIBUAAAAAAAAAAACboJIFSGdmZWRiX1xXV1dVUT8+OiUNIBYAAAAAAAAA1Yu+
        Q8XLyba1cGZkYF5aV1htb29uxysRIRQAAAAAAACV2qkJqvv78fKuaWhlYl9XWejx+/voJxcjGgAAAAAA
        mMLcqZ4qKiowBkmrcGhmYV9XJgsLCi+cciMiEgAAAACW5NG9vb2pve4sTLGrcG1mYV0oiImZ3+anI4Uc
        AAAAAJbrz829vamp6ixqs6+rcG1mYCiIicPq5t+GxIN9AACY0uvOzs29qc7uLGu1sq+rcGhhKYiR4+rn
        57vEpBgAAJXg68/Pzs3O7fYsbMq0sK+rcGYpjZDa7urs2omOGQAAjOTt0c/Pzeb69yxxzLW0sKyraCmP
        kd/z7u7acnIdAACM6fDR0c/O6/z8Lq3MtrSyrHBoLYen8/Pv7+ykhR4AAJfk9dTR0c7k/v4uxv34+Pj0
        9OVEwOb29vXz8+6hHgAAl+D34dHP4fDt9jJEMTExMTExLE38/Pr29vbz46cdAAC62Pfp2+n14dvh0511
        dnR0c3fI+f78/Pz6+urm3iQAAAC+9fb36+nk7eHRzs7Ozb2p0P7///7+/Pz27PzWfwAAAKbt///p1OvU
        z8/Pzs3Nvamo4f////////z2/J8AAAAAweP////8/OHR0dHPzs3Nvamp8///9eTm5//sfAAAAAAApvr/
        /////NvR0c/Pzs7Nvanq+ubc3Of2/7i/AAAAAAC63v//////9eTd0c/Pzs7Nver67vb8/v/ifAAAAAAA
        AACm5///////9uvkz8/Pzs7NvfD/////7H4AAAAAAAAAAACl5////v/+/N3R0dHPzs3m9e///+6CAAAA
        AAAAAAAAAACl3/f8///33dTR0c/PzuHv7f7iggAAAAAAAAAAAAAAAAC6ptr2//z29/Dr6+vw9fXjuYIA
        AAAAAAAAAAAAAAAAAAAApqbe6u3+//z18O7XopUAAAAAAAAAAAAAAAAAAAAAAAAAANmlpaa6uqalo7kA
        AAAAAAAAAAAAAP/8P///+B////AP///gB///gAH//gAAf/wAAD/4AAAf8AAAD+AAAAfgAAAHwAAAA8AA
        AAPAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAHAAAADwAAAA+AAAAPgAAAH8AAAD/gA
        AB/8AAA//gAAf/+AAf//4Af/
</value>
  </data>
</root>